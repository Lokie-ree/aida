# A.I.D.A. Complete Configuration
# Consolidated from AIDA_AGENTS.md and AIDA_PROJECT_CONTEXT.md
# Single source of truth for all project information and agent specifications

metadata:
  created: "2025-09-25"
  last_updated: "2025-09-25"
  version: "1.0.0"
  schema_version: "1.0"
  source_files:
    - "AIDA_AGENTS.md"
    - "AIDA_PROJECT_CONTEXT.md"
  maintainer: "A.I.D.A. Development Team"
  validation:
    schema_type: "YAML"
    required_fields:
      - "project"
      - "mission"
      - "agents"
      - "technical_architecture"
    validation_rules:
      - "All agent roles must have core_responsibilities"
      - "All tools must have purpose and usage defined"
      - "All performance metrics must have numeric targets"
      - "All color values must be valid hex codes"

project:
  name: "A.I.D.A."
  full_name: "Artificial Intelligence District Assistant"
  version: "1.0.0"
  description: "Voice-enabled AI assistant for K-12 educators"
  type: "web_application"
  category: "education_technology"

mission:
  primary: "Solve information overload for K-12 educators through voice-enabled AI assistant"
  vision: "Become the indispensable AI-powered command center for educators"
  philosophy: "Go deep, not wide - hyper-contextualization + voice interface"

problem_statement: |
  K-12 educators face perpetual information overload, navigating district policies, 
  curriculum guides, and professional development materials without a centralized, 
  intelligent system to synthesize this information. Teachers waste valuable time 
  searching through multiple documents and systems, leading to burnout and 
  fragmented workflows.

user_personas:
  primary:
    name: "K-12 Educator (Sarah)"
    role: "Classroom teacher, curriculum coordinator, or department head"
    goals:
      - "Quick access to district policies"
      - "Improved lesson plans"
      - "Reduced administrative burden"
    pain_points:
      - "Information overload"
      - "Time-consuming searches"
      - "Lack of personalized feedback"
    voice_interface: "Prefers hands-free operation for quick queries while multitasking"
  
  secondary:
    district_administrator:
      name: "Michael"
      role: "District Administrator"
      goals:
        - "Improve teacher efficiency"
        - "Ensure policy compliance"
        - "Demonstrate ROI"
      key_quote: "I need tools that actually solve real problems for our teachers, not just add to their workload."
    
    curriculum_coordinator:
      name: "Jennifer"
      role: "Curriculum Coordinator"
      goals:
        - "Ensure curriculum alignment"
        - "Support teacher development"
        - "Maintain quality standards"
      key_quote: "Teachers need quick access to curriculum guidance without having to dig through multiple documents."
    
    new_teacher:
      name: "David"
      role: "New Teacher"
      goals:
        - "Learn district policies quickly"
        - "Improve teaching effectiveness"
        - "Gain confidence"
      key_quote: "I need help understanding what I'm supposed to do without bothering my colleagues constantly."

competitive_analysis:
  key_advantages:
    - "Hyper-Contextualization: District-specific knowledge that general-purpose tools cannot provide"
    - "Voice Interface: Hands-free, conversational experience unmatched by competitors"
    - "Integrated Suite: Cohesive command center vs. fragmented single-purpose tools"
    - "FERPA Compliance: Self-hosted architecture with complete data ownership"
  
  competitors:
    khanmigo:
      name: "Khanmigo"
      description: "Free lesson planning but no district context or voice interface"
    
    magicschool_ai:
      name: "MagicSchool AI"
      description: "50+ tools but no voice interface or district contextualization"
    
    brisk_teaching:
      name: "Brisk Teaching"
      description: "Google integration but limited scope and no voice interface"
    
    teachermatic:
      name: "TeacherMatic"
      description: "Comprehensive tools but no voice interface or district focus"
    
    google_classroom:
      name: "Google Classroom"
      description: "Massive user base but not voice-first or district-specific"

technical_architecture:
  high_level_description: |
    A.I.D.A. uses a modern, real-time architecture optimized for voice interactions 
    and AI processing, built on the "Anti-SaaS" stack for maximum control and data ownership.
  
  core_stack:
    frontend: "React + TypeScript + Vite + Tailwind CSS (deployed on Vercel)"
    backend: "Convex (real-time DB + serverless functions, deployed on Convex Cloud)"
    ai_engine: "OpenAI GPT-4o-mini for reasoning and generation"
    voice_interface: "Vapi for real-time speech-to-text and text-to-speech"
    data_ingestion: "Firecrawl for district document scraping and processing"
    authentication: "Convex Auth (self-hosted, FERPA-compliant)"
    components: "RAG, Resend (email), Autumn (billing)"
  
  convex_components:
    auth:
      name: "Convex Auth Component"
      description: "Enterprise-grade, self-hosted authentication system"
      features:
        - "Support for email/password and anonymous authentication"
        - "FERPA compliance: data stays within infrastructure, no third-party sharing"
    
    resend:
      name: "Resend Email Component"
      description: "Reliable email delivery and notification system"
      features:
        - "Queueing system with guaranteed delivery"
        - "Professional templates for educational communications"
    
    rag:
      name: "RAG Component"
      description: "Document processing and intelligent search system"
      features:
        - "Vector search across all ingested content"
        - "Source citations for all AI-generated responses"
        - "Privacy-first: all processing within Convex deployment"
    
    autumn:
      name: "Autumn Billing Component"
      description: "Subscription and payment management system"
      features:
        - "Handle teacher Pro subscriptions and district Enterprise plans"
        - "Usage-based billing for voice queries and feature usage"
        - "FERPA-compliant payment data handling"

performance_requirements:
  voice_interface:
    response_time:
      target: "<2s"
      description: "Voice queries (critical for demo)"
      measurement: "End-to-end voice interaction time"
    recognition_accuracy:
      target: ">90%"
      description: "In quiet environments"
      measurement: "Word error rate (WER)"
    processing_latency:
      target: "<500ms"
      description: "Speech-to-text conversion"
      measurement: "Audio input to text output time"
    audio_quality:
      target: "Clear, natural speech synthesis"
      description: "Text-to-speech output quality"
      measurement: "Subjective quality assessment"
  
  system:
    load_time:
      dashboard: "<3s"
      cached_content: "<1s"
      measurement: "Time to interactive (TTI)"
    api_response:
      standard_queries: "<500ms"
      complex_rag_operations: "<2s"
      measurement: "API endpoint response time"
    mobile_performance:
      lighthouse_score: ">90"
      metrics: ["Performance", "Accessibility", "SEO"]
      measurement: "Google Lighthouse audit"
    uptime:
      target: "99.9%"
      description: "Availability target"
      measurement: "Monthly uptime percentage"
  
  scalability:
    demo_capacity:
      users: "100+"
      description: "Concurrent users"
      measurement: "Peak concurrent sessions"
    production_capacity:
      users: "1000+"
      description: "Concurrent users"
      measurement: "Peak concurrent sessions"
    voice_processing:
      capacity: "1M+"
      description: "Concurrent calls"
      provider: "Vapi"
    database:
      type: "Convex real-time database"
      scaling: "Automatic"
      description: "Serverless scaling based on demand"

success_metrics:
  business:
    conversion_rate:
      target: "15%"
      description: "Free users upgrade to Pro within 90 days"
      measurement: "Monthly conversion rate"
    churn_rate:
      target: "<5%"
      description: "Monthly churn for paid users"
      measurement: "Monthly churn percentage"
    arpu:
      teacher_pro: "$50/month"
      district_enterprise: "$10,000/year"
      measurement: "Average revenue per user"
    renewal_rate:
      target: ">90%"
      description: "Enterprise contracts"
      measurement: "Annual contract renewal rate"
  
  user_experience:
    user_satisfaction:
      target: "80%+"
      description: "Teacher satisfaction"
      measurement: "NPS and satisfaction surveys"
    retention:
      target: "70%+"
      description: "Weekly active users"
      measurement: "Weekly active user percentage"
    activation:
      target: "24 hours"
      description: "First voice query after signup"
      measurement: "Time to first voice interaction"
    engagement:
      target: "5+"
      description: "Voice queries per session"
      measurement: "Average voice queries per user session"
  
  technical_quality:
    test_coverage:
      target: ">90%"
      description: "Critical paths, especially voice interface"
      measurement: "Code coverage percentage"
    rag_accuracy:
      target: ">90%"
      description: "District policy questions"
      measurement: "Answer accuracy rate"
    error_rate:
      target: "<1%"
      description: "Voice processing"
      measurement: "Voice processing error percentage"
    accessibility:
      target: "WCAG 2.1 AA"
      description: "Compliance standard"
      measurement: "Accessibility audit score"

mvp_core_features:
  voice_district_assistant:
    name: "Voice-Enabled District Assistant"
    aha_moment: |
      A teacher asks, "What's our district's policy on student-led projects?" 
      and receives an immediate, accurate answer based on their specific 
      district's documents.
    key_capabilities:
      - "Real-time voice interaction using Vapi"
      - "District-specific knowledge base powered by RAG"
      - "Natural conversation flow with context awareness"
      - "Hands-free operation for busy educators"
  
  ai_instructional_feedback:
    name: "AI-Powered Instructional Feedback"
    aha_moment: |
      A teacher uploads a lesson plan and receives intelligent suggestions 
      for enhancing engagement and rigor.
    key_capabilities:
      - "Upload lesson plans or prompts"
      - "AI-generated feedback and suggestions"
      - "Focus on engagement and rigor improvements"
      - "Pedagogically sound recommendations"
  
  teacher_dashboard:
    name: "Teacher Command Center Dashboard"
    purpose: "Centralized overview of key tasks and insights"
    key_capabilities:
      - "Quick access to voice assistant"
      - "Lesson plan upload interface"
      - "Recent interactions and feedback"
      - "District context indicators"

design_system:
  typography:
    primary_font: "Inter - Used for all headings and body text"
    usage: "Font styles managed via Tailwind utility classes"
  
  color_palette:
    primary:
      blue:
        hex: "#3B82F6"
        description: "Primary actions, voice interface, trust and reliability"
        usage: "Buttons, links, voice interface elements"
      green:
        hex: "#10B981"
        description: "Success states, positive feedback, completion"
        usage: "Success messages, completed states, positive indicators"
      red:
        hex: "#EF4444"
        description: "Error states, warnings, critical actions"
        usage: "Error messages, warnings, delete actions"
    secondary:
      purple:
        hex: "#8B5CF6"
        description: "AI features, voice responses, innovation"
        usage: "AI-generated content, voice responses, innovative features"
      orange:
        hex: "#F59E0B"
        description: "Warnings, attention, important information"
        usage: "Warning states, attention-grabbing elements, important notices"
  
  layout_spacing:
    grid_system: "12-column responsive grid with Tailwind CSS, mobile-first approach"
    spacing_scale: "4px, 8px, 12px, 16px, 24px, 32px, 48px, 64px (Tailwind spacing scale)"
    voice_interface: "Extra spacing around voice elements for touch accessibility"

accessibility_guidelines:
  keyboard_navigation:
    requirement: "All interactive elements must be keyboard-accessible"
    priority: "Critical for voice interface"
    implementation: "Tab order, skip links, keyboard shortcuts"
  color_contrast:
    requirement: "Text and interactive elements must meet WCAG 2.1 AA standards"
    minimum_ratio: "4.5:1 for normal text, 3:1 for large text"
    testing: "Automated tools + manual verification"
  screen_reader_support:
    requirement: "All images and icons must have appropriate alt text"
    voice_interface: "Must be screen reader friendly"
    implementation: "ARIA labels, semantic HTML, descriptive text"
  focus_states:
    requirement: "Clearly visible focus indicators for all interactive elements"
    priority: "Critical for voice buttons"
    implementation: "High contrast outlines, consistent styling"
  voice_accessibility:
    requirement: "Voice interface must work with assistive technologies"
    features: "Clear audio feedback, visual indicators, fallback options"
    testing: "Screen reader compatibility, voice recognition accuracy"

security_compliance:
  ferpa:
    data_ownership: "All components run within your Convex deployment"
    no_third_party_sharing: "Authentication, documents, and analytics stay private"
    audit_trails: "Complete logging of all data access and modifications"
    access_controls: "Role-based permissions for different user types"

brand_identity:
  personality:
    supportive: "Like a trusted colleague who always has your back"
    intelligent: "Deeply knowledgeable about education with relevant insights"
    accessible: "Easy to use and understand with voice-first design"
    reliable: "Consistent, accurate, and dependable"
  
  messaging:
    tagline: "Your Voice-Powered Educational Command Center"
    elevator_pitch: |
      A.I.D.A. is the AI assistant that gives K-12 educators instant access to 
      district-specific information and personalized instructional feedback 
      through natural voice interactions.

revenue_model:
  teacher_pro_plan:
    price: "$50/month"
    features:
      - "Unlimited voice queries for district policy questions"
      - "Advanced lesson plan feedback (unlimited uploads)"
      - "Priority support and faster response times"
      - "Custom document ingestion for personal materials"
  
  district_enterprise_plan:
    price: "$10,000/year"
    features:
      - "All Teacher Pro features for all district teachers"
      - "District-wide document ingestion and management"
      - "Advanced analytics and usage reporting"
      - "Dedicated support and custom integrations"
      - "FERPA-compliant data handling and audit trails"

implementation_roadmap:
  phase_1:
    name: "MVP Development (Hackathon - 3 days)"
    goal: "Build and demonstrate core voice assistant and instructional feedback capabilities"
    key_deliverables:
      - "Voice-enabled district assistant with Vapi integration"
      - "AI-powered lesson plan feedback system"
      - "Basic dashboard with Convex backend"
      - "RAG pipeline with Firecrawl document ingestion"
      - "Working demo for hackathon judges"
  
  phase_2:
    name: "Pilot & Validation (Post-Hackathon - 3 months)"
    goal: "Validate product-market fit with early adopter teachers"
    key_deliverables:
      - "Refined voice interface based on user feedback"
      - "Enhanced RAG accuracy and response quality"
      - "Teacher onboarding flow and documentation"
      - "Pilot program with 10-20 teachers"
      - "Case study and success metrics"
  
  phase_3:
    name: "District Rollout (6-12 months)"
    goal: "Scale to full district-wide implementation with enterprise features"
    key_deliverables:
      - "Enterprise authentication and security"
      - "Advanced analytics and reporting"
      - "District-wide document ingestion"
      - "Custom integrations and APIs"
      - "Full sales and support team"

available_mcps:
  convex:
    description: "Backend operations, RAG pipeline, voice analytics"
    capabilities:
      - "Function development, RAG pipeline, voice integration"
      - "Voice AI subscriptions, live conversation management"
      - "Voice user behavior, feature usage patterns, performance monitoring"
    usage: "Primary tool for all backend operations, data persistence, and real-time features"
  
  vapi:
    description: "Voice AI integration and testing"
    capabilities:
      - "Real-time speech-to-text and text-to-speech"
      - "Quality assessment, latency optimization, error handling"
      - "Component design validation, interaction pattern testing"
    usage: "Essential for all voice interface development and testing"
  
  convex_auth:
    description: "Authentication and user management"
    capabilities:
      - "Self-hosted, FERPA-compliant user management"
      - "Role-based permissions for different user types"
      - "Onboarding and retention analytics"
    usage: "Required for all user authentication and authorization features"
  
  playwright:
    description: "Automated testing and validation"
    capabilities:
      - "Automated voice user journey testing, cross-browser validation"
      - "Mobile/tablet voice experience testing, load testing"
      - "End-to-end voice interaction validation"
    usage: "Primary tool for all testing, validation, and quality assurance"
  
  firecrawl:
    description: "Web scraping and research"
    capabilities:
      - "Voice AI technology patterns, competitor analysis"
      - "District document scraping and ingestion"
      - "Voice AI trends and best practices"
    usage: "Essential for document ingestion, research, and competitive analysis"
  
  shadcn:
    description: "UI component library with copy-paste components for voice-first design"
    capabilities:
      - "Copy-paste components built on Radix UI + Tailwind CSS"
      - "Pre-built components optimized for accessibility and voice interactions"
      - "Quick component generation for voice-first interfaces"
      - "Full control over component styling for voice-specific needs"
    usage: "Primary tool for all UI component development and voice interface implementation"

agent_coordination:
  workflow:
    - "Product Manager → System Architect"
    - "System Architect → (UX Designer + Backend Engineer) - Parallel"
    - "UX Designer + Backend Engineer → Frontend Engineer"
    - "Frontend Engineer → Quality Validation"
  
  quality_gates:
    - "Stories must be specific, testable, and aligned with voice-enabled AI assistance mission"
    - "Architecture supports voice scalability, performance, and security requirements"
    - "Voice designs meet accessibility standards, mobile-first voice requirements, and voice user experience goals"
    - "Voice endpoints tested, <2s response time achieved, FERPA compliance verified"
    - "All voice components tested, accessible, performant, and integrated"

agents:
  product_manager:
    role: "Business strategy, user experience, and product vision"
    core_responsibilities:
      - "Transform information overload problems into structured product plans"
      - "Create user stories with acceptance criteria for voice-enabled features"
      - "Prioritize backlog using effort/impact matrix for voice features"
      - "Define success metrics and KPIs for voice interactions"
    
    user_story_format: |
      As a [teacher/administrator], I want [voice functionality] so that [benefit/value].
      
      Acceptance Criteria:
      - [ ] Specific, testable voice requirement 1
      - [ ] Specific, testable voice requirement 2
      - [ ] Specific, testable voice requirement 3
      
      Priority: P0/P1/P2 with justification
      Success Metrics: How we'll measure voice interaction success
    
    handoffs:
      to_system_architect:
        - "Voice-enabled user stories with acceptance criteria"
        - "Priority levels with business justification"
        - "Success metrics and KPIs for voice interactions"
        - "Educator personas and voice journey requirements"
    
    tools:
      convex:
        purpose: "Voice user analytics and feature validation"
        usage: "Track user behavior, validate feature adoption, measure success metrics"
        priority: "Primary"
      vapi:
        purpose: "Voice AI feature testing and quality assessment"
        usage: "Test voice interactions, measure accuracy, optimize performance"
        priority: "Primary"
      convex_auth:
        purpose: "User analytics and FERPA compliance"
        usage: "Track user authentication, ensure compliance, monitor access patterns"
        priority: "High"
      playwright:
        purpose: "Voice user journey testing"
        usage: "Automated testing of voice workflows, cross-browser validation"
        priority: "High"
      firecrawl:
        purpose: "Voice AI market research and competitive analysis"
        usage: "Research competitor features, analyze market trends"
        priority: "Medium"
      shadcn:
        purpose: "UI component library for rapid voice interface prototyping"
        usage: "Quick prototyping, component testing, design validation"
        priority: "Medium"
  
  system_architect:
    role: "Technical architecture, voice AI system design, and technology decisions"
    core_responsibilities:
      - "Transform product requirements into technical architecture blueprints"
      - "Create voice AI system component design and API contracts"
      - "Design RAG pipeline data models and database schema"
      - "Ensure architecture supports <2s voice response times and scalability"
    
    handoffs:
      from_product_manager:
        - "Voice-enabled user stories with acceptance criteria"
        - "Voice AI business requirements and constraints"
        - "Success metrics and voice performance targets"
        - "Educator personas and voice journey requirements"
      
      to_backend_ux_parallel:
        - "Voice AI technical specifications and API contracts"
        - "RAG pipeline data models and validation schemas"
        - "Voice performance requirements and constraints (<2s response)"
        - "Security and FERPA compliance frameworks"
    
    tools:
      convex:
        purpose: "Voice AI backend analysis and performance monitoring"
        usage: "Analyze system performance, monitor voice processing metrics"
        priority: "Primary"
      vapi:
        purpose: "Voice AI architecture integration and testing"
        usage: "Design voice system architecture, test integration patterns"
        priority: "Primary"
      convex_auth:
        purpose: "FERPA-compliant authentication architecture design"
        usage: "Design secure auth flows, ensure compliance requirements"
        priority: "High"
      playwright:
        purpose: "Voice system integration testing and validation"
        usage: "Test end-to-end voice flows, validate system integration"
        priority: "High"
      firecrawl:
        purpose: "Voice AI technology research and architectural patterns"
        usage: "Research best practices, analyze competitor architectures"
        priority: "Medium"
      shadcn:
        purpose: "UI component architecture and design system integration"
        usage: "Design component architecture, establish design system patterns"
        priority: "Medium"
  
  ux_designer:
    role: "Voice-first user experience design, design system, and accessibility"
    core_responsibilities:
      - "Create intuitive, beautiful, and frictionless voice experiences"
      - "Design voice user experience flows and interaction patterns"
      - "Build scalable, accessible voice interface patterns"
      - "Ensure WCAG AA compliance for voice interfaces"
    
    design_philosophy: |
      Bold simplicity, intuitive voice navigation, and frictionless voice experiences with:
      1. Breathable Whitespace: Generous spacing for voice interface clarity
      2. Strategic Color Accents: Purposeful color to guide voice attention
      3. Typography Hierarchy: Clear voice information structure
      4. Voice Motion Choreography: Subtle animations for voice feedback
      5. Voice Accessibility-Driven Contrast: WCAG AA standards throughout
    
    handoffs:
      from_product_manager:
        - "Voice-enabled user stories with acceptance criteria"
        - "Educator personas and voice behavioral insights"
        - "Success metrics and voice usability requirements"
        - "Voice business priorities and constraints"
      
      to_frontend_engineer:
        - "Voice interface design specifications with all component states"
        - "Voice user flows and interaction patterns"
        - "Voice design system components and tokens"
        - "Voice accessibility requirements and testing guidelines"
        - "Responsive voice design breakpoints and mobile voice patterns"
    
    tools:
      convex:
        purpose: "Voice user behavior analysis for design validation"
        usage: "Analyze user interactions, validate design decisions with data"
        priority: "Primary"
      vapi:
        purpose: "Voice interface design validation and testing"
        usage: "Test voice UI patterns, validate interaction designs"
        priority: "Primary"
      convex_auth:
        purpose: "FERPA-compliant authentication UX design"
        usage: "Design secure, compliant authentication user flows"
        priority: "High"
      playwright:
        purpose: "Voice user experience testing and validation"
        usage: "Test voice UX flows, validate accessibility compliance"
        priority: "High"
      firecrawl:
        purpose: "Voice design research and inspiration gathering"
        usage: "Research voice UI patterns, gather design inspiration"
        priority: "Medium"
      shadcn:
        purpose: "Voice-first UI component design and rapid prototyping"
        usage: "Design voice-optimized components, rapid prototyping"
        priority: "Primary"
  
  backend_engineer:
    role: "Convex backend implementation, AI integration, and voice interface development"
    core_responsibilities:
      - "Implement voice AI integration with Vapi and OpenAI"
      - "Build RAG pipeline with Firecrawl document ingestion"
      - "Create Better Auth authentication system"
      - "Optimize for <2s voice response times and FERPA compliance"
    
    key_implementation_areas: |
      // Voice Query Processing with RAG
      export const processVoiceQuery = action({
        args: {
          audioData: v.string(),
          teacherId: v.id("teachers"),
          spaceId: v.id("spaces")
        },
        returns: v.object({
          transcript: v.string(),
          response: v.string(),
          sources: v.array(v.string())
        }),
        handler: async (ctx, args) => {
          // Voice-to-text → RAG query → AI response with citations
        }
      });
    
    handoffs:
      from_system_architect:
        - "Voice AI architecture specifications and API contracts"
        - "RAG pipeline design and document processing schemas"
        - "Performance requirements for voice interactions (<2s)"
        - "Security and FERPA compliance requirements"
      
      to_frontend_engineer:
        - "Voice interface API endpoints with Vapi integration"
        - "Real-time voice conversation subscriptions"
        - "Error handling for voice failures and network issues"
        - "Performance-optimized RAG queries and caching"
    
    tools:
      convex:
        purpose: "Primary tool for function development, RAG pipeline, voice integration"
        usage: "Develop backend functions, implement RAG, integrate voice APIs"
        priority: "Primary"
      vapi:
        purpose: "Voice AI integration, testing, and optimization"
        usage: "Integrate voice AI, test performance, optimize response times"
        priority: "Primary"
      convex_auth:
        purpose: "FERPA-compliant authentication implementation"
        usage: "Implement secure auth, ensure compliance, manage user sessions"
        priority: "High"
      firecrawl:
        purpose: "Document ingestion and research"
        usage: "Scrape district documents, process content for RAG pipeline"
        priority: "High"
      playwright:
        purpose: "Voice API testing and validation"
        usage: "Test voice APIs, validate error handling, performance testing"
        priority: "High"
      shadcn:
        purpose: "UI component integration for voice interface components"
        usage: "Integrate voice UI components, customize for voice interactions"
        priority: "Medium"
  
  frontend_engineer:
    role: "React/Vite implementation, voice interface development, and performance optimization"
    core_responsibilities:
      - "Build voice-first React components with TypeScript"
      - "Integrate voice interface with Convex backend APIs"
      - "Implement responsive design optimized for mobile voice workflows"
      - "Ensure WCAG AA accessibility compliance for voice interfaces"
    
    key_implementation_areas: |
      // Voice component structure
      interface VoiceComponentProps {
        className?: string;
        onVoiceStart?: () => void;
        onVoiceEnd?: (transcript: string) => void;
        onVoiceError?: (error: string) => void;
        disabled?: boolean;
      }
      
      export function VoiceInterface({ className, onVoiceStart, onVoiceEnd, ...props }: VoiceComponentProps) {
        return (
          <div className={cn("voice-interface-styles", className)} {...props}>
            {/* Voice recording and playback components */}
          </div>
        );
      }
    
    handoffs:
      from_ux_designer:
        - "Voice interface design specifications with all component states"
        - "Voice interaction flows and user journey patterns"
        - "Accessibility requirements for voice interfaces and testing guidelines"
        - "Responsive design breakpoints optimized for mobile voice interactions"
      
      from_backend_engineer:
        - "Voice AI API endpoints with Vapi integration"
        - "Real-time voice conversation subscriptions and data operations"
        - "Voice error handling patterns and fallback mechanisms"
        - "Performance-optimized RAG queries and voice response caching"
      
      final_integration: "Production-ready voice interfaces with complete functionality"
    
    tools:
      convex:
        purpose: "Frontend data integration, voice AI subscriptions, user analytics"
        usage: "Integrate real-time data, manage voice subscriptions, track analytics"
        priority: "Primary"
      vapi:
        purpose: "Voice interface integration, testing, and optimization"
        usage: "Integrate voice UI, test interactions, optimize performance"
        priority: "Primary"
      convex_auth:
        purpose: "FERPA-compliant authentication UI implementation"
        usage: "Implement auth UI components, ensure compliance in frontend"
        priority: "High"
      playwright:
        purpose: "Voice UI testing and validation"
        usage: "Test voice UI components, validate user interactions"
        priority: "High"
      firecrawl:
        purpose: "Frontend research and voice interface best practices"
        usage: "Research voice UI patterns, implement best practices"
        priority: "Medium"
      shadcn:
        purpose: "Voice-first UI component implementation and customization"
        usage: "Implement voice-optimized components, customize for voice UX"
        priority: "Primary"

# Consolidated success metrics (removed duplicate from success_metrics section)
# See success_metrics section above for detailed metrics

usage_instructions:
  for_ai_agent_prompts:
    - "This agent specification file (AIDA_AGENTS.md) - Contains role-specific responsibilities, handoffs, and tools"
    - "The project context file (AIDA_PROJECT_CONTEXT.md) - Contains complete project information, technical stack, and requirements"
  
  agent_selection_guidelines:
    product_decisions_user_stories: "Use Product Manager agent"
    technical_architecture_system_design: "Use System Architect agent"
    design_ux_voice_interfaces: "Use UX Designer agent"
    backend_development_ai_integration: "Use Backend Engineer agent"
    frontend_development_react_implementation: "Use Frontend Engineer agent"
  
  agent_coordination:
    sequential_handoffs: "Product Manager → System Architect → (UX Designer + Backend Engineer) → Frontend Engineer"
    parallel_work: "UX Designer and Backend Engineer work simultaneously after System Architect"
    quality_gates: "Each handoff must meet specific criteria before proceeding"
  
  benefits_consolidated_approach:
    - "Single Source of Truth: All agent roles in one file"
    - "Reduced Context Switching: No need to reference multiple agent files"
    - "Consistent Information: All agents have access to same project context"
    - "Easier Maintenance: Update agent roles in one place"
    - "Better Agent Performance: Complete information for better decision-making"

primary_mission: |
  Your primary mission is to facilitate voice-enabled AI assistance that solves 
  information overload for K-12 educators. Every decision should be evaluated 
  against this core mission and the specific needs of teachers and administrators.

# Quick Reference Summary
summary:
  project_overview:
    name: "A.I.D.A. (Artificial Intelligence District Assistant)"
    mission: "Solve information overload for K-12 educators through voice-enabled AI assistant"
    key_differentiator: "Voice-first interface with district-specific contextualization"
  
  core_features:
    - "Voice-enabled district assistant with Vapi integration"
    - "AI-powered instructional feedback system"
    - "Teacher command center dashboard"
    - "RAG pipeline with Firecrawl document ingestion"
  
  technical_stack:
    frontend: "React + TypeScript + Vite + Tailwind CSS"
    backend: "Convex (real-time DB + serverless functions)"
    ai_engine: "OpenAI GPT-4o-mini"
    voice_interface: "Vapi"
    authentication: "Convex Auth (FERPA-compliant)"
  
  agent_roles:
    - "Product Manager: Business strategy and user stories"
    - "System Architect: Technical architecture and system design"
    - "UX Designer: Voice-first user experience design"
    - "Backend Engineer: Convex implementation and AI integration"
    - "Frontend Engineer: React implementation and voice interface"
  
  key_metrics:
    voice_performance: "<2s response time, >90% accuracy"
    user_satisfaction: ">80% teacher satisfaction"
    business_targets: "$50/month per teacher, $10K/year per district"
    technical_quality: ">90% test coverage, WCAG 2.1 AA compliance"
  
  available_tools:
    - "Convex: Backend operations and real-time features"
    - "Vapi: Voice AI integration and testing"
    - "Convex Auth: FERPA-compliant authentication"
    - "Playwright: Automated testing and validation"
    - "Firecrawl: Web scraping and research"
    - "ShadCN: UI component library for voice-first design"
